<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lars` github/Hugo powered blog</title>
    <link>https://bartschat.github.io/post/</link>
    <description>Recent content in Posts on Lars` github/Hugo powered blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 May 2017 17:27:09 +0200</lastBuildDate>
    <atom:link href="https://bartschat.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to organize your collaborative case study in six simple steps</title>
      <link>https://bartschat.github.io/post/Six_simple_steps_collaborative_case_study/</link>
      <pubDate>Tue, 02 May 2017 17:27:09 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/Six_simple_steps_collaborative_case_study/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/case_study.png&#34; alt=&#34;Case Study Workflow Sketchnote&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;phase-0-topic-announcement:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 0 - Topic Announcement&lt;/h2&gt;

&lt;p&gt;The first step is a no-brainer. Just make sure everyone gets the topic, the included tasks, and all issued documents and has read them at the first meeting in phase 1.&lt;/p&gt;

&lt;h3 id=&#34;phase-0-checklist:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 0 Checklist:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;All documents received&lt;/li&gt;
&lt;li&gt;Deadline for Phase 1 set&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;phase-1-the-initial-phase:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 1 - The initial phase&lt;/h2&gt;

&lt;p&gt;The first phase consists of three parts. First, you have recheck that everyone is up to speed and has read all issued documents. Then you enter the first discussion in which everyone explains how he/she understands the tasks and his/her first view of the case. From there it is a fluent transition into the idea generation which can be done with a brainstorming. This step should be time capped because experience shows that it can get out of hands really quick. Once the general ideas are mapped out and a first plan has been made up the tasks can be divided. Common sense should be applied: Check if the competences of the team members and their preferences can be taken into account or not. Maybe one of the group members takes on the role of a formal or informal leader/project manager.&lt;/p&gt;

&lt;h3 id=&#34;phase-1-checklist:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 1 Checklist:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Documents read and understood&lt;/li&gt;
&lt;li&gt;Tasks read and understood&lt;/li&gt;
&lt;li&gt;Task distributed&lt;/li&gt;
&lt;li&gt;Deadline met&lt;/li&gt;
&lt;li&gt;Deadline for Phase 2 set&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;phase-2-the-research-phase:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 2 - The Research Phase&lt;/h2&gt;

&lt;p&gt;The favorite phase of every student, researching the topic in depths. The ability to research a specific topic in depth is one of the key competencies every student has to acquire during his or her time at the university or college, so I will not discuss it in this posting. But what I really want to concentrate on is: focus. Focus on the tasks at hand, do not let your research mojo flow freely into every aspect of the topic. Remember that you have set a deadline for this phase and focus.&lt;/p&gt;

&lt;h3 id=&#34;phase-2-checklist:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 2 Checklist:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Focussed research done&lt;/li&gt;
&lt;li&gt;Gathered data clearly arranged&lt;/li&gt;
&lt;li&gt;Deadline met&lt;/li&gt;
&lt;li&gt;Deadline for Phase 3 set&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;phase-3-the-contribution-phase:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 3 - The Contribution Phase&lt;/h2&gt;

&lt;p&gt;In Phase 3 the members of the group will process their research data and contribute it into a first draft of their product, usually some kind of essay or report. This phase will most likely merge into the next on, the Discussion Phase, so the deadline for the Contribution Phase applies more or less to that one, too.&lt;/p&gt;

&lt;h3 id=&#34;phase-3-checklist:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 3 Checklist:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Deadline met&lt;/li&gt;
&lt;li&gt;Data cleanly processed&lt;/li&gt;
&lt;li&gt;First draft done&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;phase-4-the-discussion-phase:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 4 - The Discussion Phase&lt;/h2&gt;

&lt;p&gt;As mentioned, Phases 3 and 4 will be hard to distinguish from each other, as every aspect of a collaborative product needs to be discussed, torn apart and reassembled in a new way. The final report should fulfill the MECE criteria: mutually exclusive and collectively exhaustive!&lt;/p&gt;

&lt;h3 id=&#34;phase-4-checklist:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 4 Checklist:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Deadline met (Phases 3 and 4)&lt;/li&gt;
&lt;li&gt;Deadline for Phase 5 set&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;phase-5-the-publishing-phase:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 5 - The Publishing Phase&lt;/h2&gt;

&lt;p&gt;The Publishing Phase can either be virtually non-existent, if you already compiled the final product in the Contribution/Discussion Phase or it can be quite an elaborate task, if you need to set up data representations, format stuff or maybe transfer it from MS Word into LaTeX or program a website.  Before handing in your work: Let someone external proof-read it, preferably more than one person.&lt;/p&gt;

&lt;h3 id=&#34;phase-5-checklist:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 5 Checklist:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Deadline met&lt;/li&gt;
&lt;li&gt;Finalized product&lt;/li&gt;
&lt;li&gt;One or more external correction runs&lt;/li&gt;
&lt;li&gt;Re-finalized product&lt;/li&gt;
&lt;li&gt;Handed in (Case Study Deadline met!)&lt;/li&gt;
&lt;li&gt;Set deadline for Phase 6 (if applicable)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;phase-6-the-presentation-phase:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 6 - The Presentation Phase&lt;/h2&gt;

&lt;p&gt;Most case studies do not just require a written report but also a live presentation in front of your fellow students and your professor(s). So, one last time, meet the deadline, prepare your slides or flipcharts or whatever medium your group wants to employ. And then double check all equipment prior, as Murphy’s Law will hit you hard otherwise&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;phase-6-checklist:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;Phase 6 Checklist:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Deadline met&lt;/li&gt;
&lt;li&gt;Presentation (digital/analog) prepared&lt;/li&gt;
&lt;li&gt;Equipment checked&lt;/li&gt;
&lt;li&gt;Equipment re-checked&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;general-rules:e2d0a0a32d4d32358887d99c23d9ebe2&#34;&gt;General Rules&lt;/h1&gt;

&lt;p&gt;To (more or less) enjoy the ride of a collaborative case study I suggest the following rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Employ constructive criticism only!&lt;/li&gt;
&lt;li&gt;Never take it personally!&lt;/li&gt;
&lt;li&gt;Stick to your deadlines!&lt;/li&gt;
&lt;li&gt;Don’t be a freeloader!&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>The relationship between brand architecture, brand strategy and corporate strategy</title>
      <link>https://bartschat.github.io/post/brand_architecture_strategy_corporate_strategy/</link>
      <pubDate>Wed, 12 Apr 2017 20:58:27 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/brand_architecture_strategy_corporate_strategy/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/brand_architecture_strategy_corporate_strategy.png&#34; alt=&#34;Brand strategy sketchnote&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;the-relationship-between-brand-architecture-brand-strategy-and-corporate-strategy:7e245ecb6ebf204b8abe641523d41d6c&#34;&gt;The relationship between brand architecture, brand strategy, and corporate strategy&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&amp;ldquo;A strategy is a pattern in a stream of decisions&amp;rdquo;&lt;/em&gt; (Henry Mintzberg)&lt;/p&gt;

&lt;h2 id=&#34;corporate-strategy:7e245ecb6ebf204b8abe641523d41d6c&#34;&gt;Corporate strategy&lt;/h2&gt;

&lt;p&gt;The corporate strategy consists of the foundational and long-term oriented patterns
in the decision stream of a company or corporation. These decisions aim to define
the future of the company with the intent to achieve certain economic goals. Thusly
the corporate strategy dictates the framing conditions for the brand architecture as
well as the brand strategy, but those terms are often treated as synonyms in
some parts of literature. If they are to be treated as distinct entities there
is a strong reciprocal relationship between them and they do overlap in some parts.&lt;/p&gt;

&lt;h2 id=&#34;brand-architecture:7e245ecb6ebf204b8abe641523d41d6c&#34;&gt;Brand architecture&lt;/h2&gt;

&lt;p&gt;The brand architecture defines the formal content related design and structure of
a specific brand and its sub-brands. The formal design consists mainly of the
brand hierarchy which defines which brands out of the company&amp;rsquo;s brand portfolio
are positioned on which corporate level. But in addition, one has to pay attention
to the perceived brand hierarchy from the customer&amp;rsquo;s point of view due to its
significant influence on the buying behavior.&lt;/p&gt;

&lt;h2 id=&#34;brand-strategy:7e245ecb6ebf204b8abe641523d41d6c&#34;&gt;Brand Strategy&lt;/h2&gt;

&lt;p&gt;Strategic brand design includes the necessary decisions on the vertical,
horizontal and lateral dimensions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The vertical dimension defines the influence of the main brand on the sub-brands and vice versa. The spectrum reaches from a branded house to a house of brands.&lt;/li&gt;
&lt;li&gt;The horizontal dimension defines the number of brands which are being operated by the company in one specific market or market segment.&lt;/li&gt;
&lt;li&gt;The lateral dimension defines if the company is producing goods/services exclusively under its own brand or producing for other partners, e.g. private label brands.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Constructing a brand strategy also includes the definition of the brand&amp;rsquo;s main focus, which
could be a thrive for innovation, nurturing valuable customer relationships, installing
an online/direct/multi-channel sales model or performing pull tactics in customer
communications.&lt;/p&gt;

&lt;h2 id=&#34;assessment-internal-and-external:7e245ecb6ebf204b8abe641523d41d6c&#34;&gt;Assessment - internal and external&lt;/h2&gt;

&lt;p&gt;Brand strategy and brand architecture have to be continuously monitored, assessed
and evaluated, which is done by brand controlling. Internal assessment criteria
could be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;employee acceptance&lt;/li&gt;
&lt;li&gt;available vs. needed resources&lt;/li&gt;
&lt;li&gt;strategic flexibility, also in regards to brand evolution approaches in the future&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;External criteria:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;External stakeholders, e.g. customers, as mentioned above due to the significant influence on the buying behavior (the significance of a corporate brand and a product brand are not equal!)&lt;/li&gt;
&lt;li&gt;market potentials&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Animated Application made with PowToon</title>
      <link>https://bartschat.github.io/post/Powtoon_Graphical_Application/</link>
      <pubDate>Thu, 06 Apr 2017 21:55:00 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/Powtoon_Graphical_Application/</guid>
      <description>

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/edOwVbVHe0g&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;something-wrong-with-your-business:18ad91639f8847e90c237b10ee42a5c9&#34;&gt;Something wrong with your business?&lt;/h2&gt;

&lt;p&gt;Are your numbers going down? Your revenues? Are your department more like silos and coordinating? Does
Marketing ignore R&amp;amp;D and Sales?&lt;/p&gt;

&lt;h2 id=&#34;look-for-new-talents:18ad91639f8847e90c237b10ee42a5c9&#34;&gt;Look for new talents&lt;/h2&gt;

&lt;p&gt;Maybe you need a new employee with skills in IT, Marketing, Training and Project Management
who can be like a kind of interface or coordinator?&lt;/p&gt;

&lt;h2 id=&#34;hello-there:18ad91639f8847e90c237b10ee42a5c9&#34;&gt;Hello there!&lt;/h2&gt;

&lt;p&gt;Nice to meet you, it&amp;rsquo;s me!&lt;/p&gt;

&lt;h2 id=&#34;it:18ad91639f8847e90c237b10ee42a5c9&#34;&gt;IT&lt;/h2&gt;

&lt;p&gt;I have some serious IT skills and&amp;hellip; I&amp;rsquo;m an Engineer! ;)&lt;/p&gt;

&lt;h2 id=&#34;marketing:18ad91639f8847e90c237b10ee42a5c9&#34;&gt;Marketing&lt;/h2&gt;

&lt;p&gt;Yes, Engineers can do Marketing, that&amp;rsquo;s why I&amp;rsquo;m able to translate between your
R&amp;amp;D guys, the IT section, Marketing and Sales and act as a force multiplier.&lt;/p&gt;

&lt;h2 id=&#34;management:18ad91639f8847e90c237b10ee42a5c9&#34;&gt;Management&lt;/h2&gt;

&lt;p&gt;As an Air Force Officer, I learned how to manage projects in different sizes,
I was leading a team of 25 highly qualified men and women and trained executive
officers of the air force.&lt;/p&gt;

&lt;h2 id=&#34;message-me:18ad91639f8847e90c237b10ee42a5c9&#34;&gt;Message me!&lt;/h2&gt;

&lt;p&gt;Are you interested? Just drop me a message via bartschat(at)mailbox.org.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hyperconvergent Infrastructure sketchnoted</title>
      <link>https://bartschat.github.io/post/Hyperconvergent_Infrastructure/</link>
      <pubDate>Tue, 04 Apr 2017 19:08:46 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/Hyperconvergent_Infrastructure/</guid>
      <description>&lt;p&gt;Lately there has been some buzz regarding hyperconvergent infrastructures, which
is an old hat, more or less&amp;hellip; (See this &lt;a href=&#34;https://www.heise.de/newsticker/meldung/Hyperkonvergenz-Zurueck-zu-den-Server-Anfaengen-3670867.html&#34;&gt;article at heise.de&lt;/a&gt;)
To illustrate the topic I created a little sketchnote showing the differences
between the DIY approach to data center design, convergent infrastructures and
hyperconvergent infrastructures which could also be designated as software defined
data centers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Sketchnote_Hyperconvergent.png&#34; alt=&#34;Thesis workflow graphical display&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Status Update - Little Pi Bot</title>
      <link>https://bartschat.github.io/post/LittlePiBot_Status_Update/</link>
      <pubDate>Wed, 22 Mar 2017 19:17:07 +0100</pubDate>
      
      <guid>https://bartschat.github.io/post/LittlePiBot_Status_Update/</guid>
      <description>

&lt;h1 id=&#34;a-quick-and-dirty-look-at-the-current-code-status-of-the-little-pi-bot:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;A quick and dirty look at the current code status of the Little Pi Bot&lt;/h1&gt;

&lt;p&gt;Get the bot a its &lt;a href=&#34;https://github.com/bartschat/Little_Pi_Bot&#34;&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;code-with-comments:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;Code with comments&lt;/h1&gt;

&lt;h2 id=&#34;importing-of-modules:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;Importing of modules&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#! /usr/bin/python

import sys
import time
import os
import logging
import subprocess
from functools import wraps
from telegram.ext import Updater, CommandHandler,Job
import sqlite3
from picamera import PiCamera
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;initialize-the-raspberry-pi-camera-module:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;Initialize the Raspberry Pi camera module&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;camera = PiCamera()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;set-the-list-of-administrators:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;Set the list of administrators&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;LIST_OF_ADMINS = [1234567890]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;define-a-wrapper-to-restrict-access-for-specific-functions:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;Define a wrapper to restrict access for specific functions&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;def restricted(func):
    @wraps(func)
    def wrapped(bot, update, *args, **kwargs):
        try:
            user_id = update.message.from_user.id
        except (NameError, AttributeError):
            try:
                user_id = update.inline_query.from_user.id
            except (NameError, AttributeError):
                try:
                    user_id = update.chosen_inline_result.from_user.id
                except (NameError, AttributeError):
                    try:
                        user_id = update.callback_query.from_user.id
                    except (NameError, AttributeError):
                        print(&amp;quot;No User ID available in update.&amp;quot;)
                        return
        if user_id not in LIST_OF_ADMINS:
            print(&amp;quot;Unathorized access denied for {}.&amp;quot;.format(update.message.chat_id))
            return
        return func(bot, update, *args, **kwargs)
return wrapped
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;the-restart-function-restricted-by-using-the-wrapper-defined-above:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;The /restart function (restricted by using the wrapper defined above)&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;@restricted
def restart(bot, update):
    bot.sendMessage(update.message.chat_id, &amp;quot;Bot is restarting...&amp;quot;)
    time.sleep(0.2)
os.execl(sys.executable, sys.executable, *sys.argv)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;start-help-and-hello-functions-for-basic-bot-interaction:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;/start, /help and /hello functions for basic bot interaction&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;def start(bot, update):
    update.message.reply_text(&#39;Hello there! If you need /help, just ask for it!&#39;)

def help(bot, update):
    update.message.reply_text(&#39;List of implemented commands: &#39;)
    update.message.reply_text(&#39;/hello - Say hi ;)&#39;)
    update.message.reply_text(&#39;/set_interval seconds - Get sensor status in the given interval&#39;)
    update.message.reply_text(&#39;/unset_interval - Stop interval&#39;)
    update.message.reply_text(&#39;/status - Get current system status&#39;)
    update.message.reply_text(&#39;/restart - Restart bot[requires admin status]&#39;)
    update.message.reply_text(&#39;/photo - Get latest photo of the bot&#39;)
    update.message.reply_text(&#39;/help - List implemented commands&#39;)

def hello(bot, update):
    update.message.reply_text(
&#39;Hello {}&#39;.format(update.message.from_user.first_name))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sensor-data-readout-and-storing-it-in-an-sqlite3-db:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;Sensor data readout and storing it in an sqlite3 db&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;def current_sensor_data():
    conn = sqlite3.connect(&#39;/home/pi/devel/littlepibot/littlepibot.db&#39;)
    with conn:
        conn.row_factory = sqlite3.Row
        curs = conn.cursor()
        curs.execute(&amp;quot;SELECT * FROM sensor_data WHERE tdate=date(&#39;now&#39;) ORDER BY time(ttime) DESC LIMIT 1;&amp;quot;)
        data = curs.fetchone()
        temperature = float(data[&amp;quot;temperature&amp;quot;])
        humidity = float(data[&amp;quot;humidity&amp;quot;])
        readout = data[&amp;quot;ttime&amp;quot;]
    conn.close()
return{&#39;temperature&#39;:temperature, &#39;humidity&#39;:humidity, &#39;readout&#39;:readout}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;the-status-command:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;The /status command&lt;/h2&gt;

&lt;p&gt;Making the bot tell you the last sensor values and the return of the uptime command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def status(bot, update):
    data = current_sensor_data()
    uptime = subprocess.check_output([&#39;/usr/bin/uptime&#39;])
    msg_text = &amp;quot;System uptime: {0}\nLast sensor readout: {1}\nTemperature: {2:.2f} *C\nHumidity: {3:.2f} %&amp;quot;.format(uptime,data[&#39;readout&#39;],data[&#39;temperature&#39;], data[&#39;humidity&#39;])
update.message.reply_text(msg_text)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;super-simple-error-logging:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;Super simple error logging:&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;def error(bot, update, error):
  logger.warning(&#39;Update &amp;quot;%s&amp;quot; caused error &amp;quot;%s&amp;quot;&#39; % (update, error))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;perform-regular-tasks-with-the-bot:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;Perform regular tasks with the bot&lt;/h2&gt;

&lt;p&gt;The following function set enables the bot to set an interval, in which the last
sensor readout is sent to the requesting Telegram user, e.g. /set_interval 300 will make
the bot tell you the last sensor readout every 5 minutes. /unset_interval will stop this.
The send_data function is only used internally. Note: This function has to be changed
so that the sensor values are taken from the database not from an actual readout.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def send_data(bot, job):
    data = current_sensor_data()
    msg_text = &amp;quot;Last sensor readout: {0}\nTemperature: {1:.2f} *C\nHumidity: {2:.2f} %&amp;quot;.format(data[&#39;readout&#39;],data[&#39;temperature&#39;], data[&#39;humidity&#39;])
    bot.sendMessage(job.context, text=msg_text)


def set_interval(bot, update, args, job_queue, chat_data):
    chat_id = update.message.chat_id
    try:
        interval = int(args[0])
        if interval &amp;lt; 0:
            update.message.reply_text(&#39;Sorry, unable to go back to the future!&#39;)
            return
        job = Job(send_data, interval, repeat=True, context=chat_id)
        chat_data[&#39;job&#39;] = job
        job_queue.put(job)
        update.message.reply_text(&#39;Interval has been set!&#39;)
        intervals = True
    except (IndexError, ValueError):
        update.message.reply_text(&#39;Usage: /set_interval seconds&#39;)

def unset_interval(bot, update, chat_data):
    global intervals
    if &#39;job&#39; not in chat_data:
        update.message.reply_text(&#39;No interval set!&#39;)
        return
    job = chat_data[&#39;job&#39;]
    job.schedule_removal()
    del chat_data[&#39;job&#39;]
    update.message.reply_text(&#39;Interval unset!&#39;)
  intervals = False
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;say-cheese-photo:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;Say cheese - /photo&lt;/h2&gt;

&lt;p&gt;As I got my Raspberry Pi camera module finally the bot is now able to react to a
/photo request by snapping a picture with it and sending it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def photo(bot,update,chat_data):
    update.message.reply_text(&#39;What are you looking at?&#39;)
    photo_path = &amp;quot;/home/pi/devel/littlepibot/test.jpg&amp;quot;
    time.sleep(3)
    camera.capture(photo_path)
  bot.sendPhoto(chat_id = update.message.chat_id,photo=open(photo_path,&#39;rb&#39;))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;main:9e1773d035ab7640c67d9c2a7f40e1d4&#34;&gt;main()&lt;/h2&gt;

&lt;p&gt;The main() function, which Initializes the Updater with the Bot Token, enables
the simple logging feature and adds the bot CommandHandlers before starting the
bot at the end:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def main():
    # global stuff
    # Token from @botfather for the telegram bot API
    updater = Updater(&#39;TOKEN:TOKEN&#39;)
    # start logging
    logging.basicConfig(format=&#39;%(asctime)s - %(name)s - %(levelname)s - %(message)s&#39;, level=logging.INFO)
    logger = logging.getLogger(__name__)

    # Dispatcher for the telegram bot stuff
    dp = updater.dispatcher
    dp.add_handler(CommandHandler(&#39;restart&#39;, restart))
    dp.add_handler(CommandHandler(&#39;start&#39;, start))
    dp.add_handler(CommandHandler(&#39;hello&#39;, hello))
    dp.add_handler(CommandHandler(&#39;help&#39;, help))
    dp.add_handler(CommandHandler(&#39;status&#39;, status))

    dp.add_handler(CommandHandler(&#39;set_interval&#39;, set_interval,
                                                pass_args=True,
                                                pass_job_queue=True,
                                                pass_chat_data=True))
    dp.add_handler(CommandHandler(&#39;unset_interval&#39;, unset_interval,
                                                pass_chat_data=True))
    dp.add_handler(CommandHandler(&#39;photo&#39;, photo,
                                                pass_chat_data=True))
    dp.add_error_handler(error)

    # start telegram bot ;)
    updater.start_polling()
    updater.idle()

if __name__ == &#39;__main__&#39;:
  main()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Sketchnote - Marketing in a Digital World (german)</title>
      <link>https://bartschat.github.io/post/Sketchnote_Marketing_Digital/</link>
      <pubDate>Wed, 22 Mar 2017 18:31:37 +0100</pubDate>
      
      <guid>https://bartschat.github.io/post/Sketchnote_Marketing_Digital/</guid>
      <description>&lt;p&gt;A (german) Sketchnote depicting the value creating network in a digital world
with the centralised management hub, functional partners and factors to consider.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Sketchnote_Marketing_Digital.png&#34; alt=&#34;Sketchnote Digital Marketing&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sketchnote - The Flipper Paradigm in Digital Marketing</title>
      <link>https://bartschat.github.io/post/Sketchnote_Flipper_Paradigm/</link>
      <pubDate>Thu, 16 Mar 2017 19:28:21 +0100</pubDate>
      
      <guid>https://bartschat.github.io/post/Sketchnote_Flipper_Paradigm/</guid>
      <description>&lt;p&gt;A sketchnote depicting the Flipper Paradigm in Digital Marketing according
to &lt;a href=&#34;https://www.marketingcenter.de/en/mcm/lmm&#34;&gt;Prof. Hennig-Thurau of the Muenster University&lt;/a&gt;.
&lt;img src=&#34;https://bartschat.github.io/img/Sketchnote_Flipper_Paradigm.png&#34; alt=&#34;Sketchnote Flipper Paradigm&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TED: What customers want (Sketchnote)</title>
      <link>https://bartschat.github.io/post/What_customers_want_Sketchnote/</link>
      <pubDate>Wed, 08 Mar 2017 19:07:50 +0100</pubDate>
      
      <guid>https://bartschat.github.io/post/What_customers_want_Sketchnote/</guid>
      <description>&lt;p&gt;To improve my sketchnoting skills, which are rudimentary at most, I like to
visit YouTube and watch a video from one of the TED and TEDx events with an
interesting topic to sketchnote it. Below is one of those &amp;ldquo;training sketchnose&amp;rdquo;
I made for a talk given by Joseph Pine on the topic of customers&amp;rsquo; needs for
authenticity:&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/2RD0OZCyJCk&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Sketchnote What customers want.png&#34; alt=&#34;Sketchnote to the TED talk What customer want&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sketchnotes Digital Management</title>
      <link>https://bartschat.github.io/post/Sketchnotes_Digital_Management/</link>
      <pubDate>Tue, 07 Mar 2017 21:43:52 +0100</pubDate>
      
      <guid>https://bartschat.github.io/post/Sketchnotes_Digital_Management/</guid>
      <description>

&lt;p&gt;A small selection of the sketchnotes that I took during my last lectures in
my &lt;a href=&#34;http://weiterbildung.uni-muenster.de/de/masterstudiengaenge/emba-marketing/marketingmba/&#34;&gt;MBA program in Münster&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;digital-management-current-state:905a49a87d024e0581ef59fe28d2197c&#34;&gt;Digital Management - Current state?&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Sketchnotes Digital Management.JPG&#34; alt=&#34;Sketchnote Digital Management&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;digital-management-implications:905a49a87d024e0581ef59fe28d2197c&#34;&gt;Digital Management - Implications?&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Sketchnotes Digital Management Implikationen.JPG&#34; alt=&#34;Sketchnote Digital Management Implikationen&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;a-pinball-machine-as-the-new-marketing-paradigm:905a49a87d024e0581ef59fe28d2197c&#34;&gt;A pinball machine as the new marketing paradigm?&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Sketchnote_Pinball.jpg&#34; alt=&#34;Sketchnote Flippern als Marketing Paradigma&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Little Pi Bot - a Telegram ChatBot in Python</title>
      <link>https://bartschat.github.io/post/littlepibot_telegram_chatbot_python/</link>
      <pubDate>Thu, 02 Mar 2017 20:49:49 +0100</pubDate>
      
      <guid>https://bartschat.github.io/post/littlepibot_telegram_chatbot_python/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/littlepibot.png&#34; alt=&#34;Sketchnote of Little Pi Bot&#39;s layout&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;general-idea-layout:9ba6166c31e88ffbafd8ff0da89f02eb&#34;&gt;General idea/layout&lt;/h1&gt;

&lt;p&gt;The sketchnote above shows my general idea how I set up the Little Pi Bot. It is
running on a Raspberry Pi, Version 2, which is connected to a AM2302 temperature
and humidity sensor via GPIO pins.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/raspberry_pi_with_am2302.png&#34; alt=&#34;Photo of Raspberry Pi with AM2302&#34; /&gt;
The other little module sitting next to the AM2302 on the GPIO pins is a
Realtime Clock.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d like to provide you with a little howto or tutorial and describe how
you can set up your own Little Pi Bot when you have a running Raspberry Pi
and plugged in your sensor to the GPIO pins.&lt;/p&gt;

&lt;h1 id=&#34;install-the-adafruit-python-python-dht-library:9ba6166c31e88ffbafd8ff0da89f02eb&#34;&gt;Install the Adafruit Python Python DHT Library&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Update your linux and install some dependencies:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt update
$ sudo apt install build-essential python-dev sqlite3
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Download the &lt;a href=&#34;https://github.com/adafruit/Adafruit_Python_DHT&#34;&gt;library&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo python setup.py install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;install-the-python-telegram-bot-wrapper:9ba6166c31e88ffbafd8ff0da89f02eb&#34;&gt;Install the python-telegram-bot wrapper&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pip install python-telegram-bot --upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Or download it from &lt;a href=&#34;https://github.com/python-telegram-bot/&#34;&gt;GitHub&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/python-telegram-bot/python-telegram-bot
$ cd python-telegram-bot
$ python setup.py install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;install-the-little-pi-bot-scripts:9ba6166c31e88ffbafd8ff0da89f02eb&#34;&gt;Install the Little Pi Bot scripts&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Clone it from my &lt;a href=&#34;https://github.com/bartschat/Little_Pi_Bot&#34;&gt;GitHub repo&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/bartschat/Little_Pi_Bot
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Move the systemd services script into the correct directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo mv littlepibot.service /lib/systemd/system/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Edit the script and adjust the directory&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Adjust the file permission:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo chmod 644 /lib/systemd/system/littlepibot.service
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Enable the service:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl daemon-reload
$ sudo systemctl enable littlepibot.service
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create the sqlite3 database in a directory of your choice:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sqlite3 littlepibot.db
CREATE TABLE sensor_data (tdate DATE, ttime TIME, temperature NUMERIC, humidity NUMERIC);
.quit
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Edit littlepibot.py and sensor_read_db_write.py and make sure the database is correctly adressed in there.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In littlepibot.py enter your telegram user id into the list of admins to give you the right to restart your bot.
If you don&amp;rsquo;t know your user id, just talk to the &lt;a href=&#34;https://telegram.me/userinfobot&#34;&gt;userinfobot&lt;/a&gt; on Telegram.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Edit the root user&amp;rsquo;s crontab for regular sensor data reads:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo crontab -e
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Insert a line like this (this example read sensor data every 5 minutes, adjust the path as necessary!):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;*/5     *       *       *       *       /home/pi/devel/littlepibot/sensor_read_db_write.py
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Start the Bot:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl start littlepibot
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You should now be able to talk to your bot via Telegram and issue orders like /status or /set_interval.&lt;/p&gt;

&lt;h1 id=&#34;links-and-ressources:9ba6166c31e88ffbafd8ff0da89f02eb&#34;&gt;Links and Ressources&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_Python_DHT&#34;&gt;Python Library for the AM2302 from Adafruit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/python-telegram-bot/&#34;&gt;python-telegram-bot - wrapper for telegram API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://akizukidenshi.com/download/ds/aosong/AM2302.pdf&#34;&gt;AM2302 Datasheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aosong.com/en/products/details.asp?id=117&#34;&gt;AM2302 Product Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;help-me-to-make-this-guide-better:9ba6166c31e88ffbafd8ff0da89f02eb&#34;&gt;Help me to make this guide better&lt;/h1&gt;

&lt;p&gt;If you encounter any problems during the setup please leave a comment. And please
be aware that this Bot is just a personal project for me to improve my coding and
tinkering skills a little bit, so it will most likely be always incomplete. Currently
I would like to add some parts to analyze the sensor data, so that the Bot can talk
to you about that, but it is still a work in progress. :)&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Success Factors of Video Game Consoles - A Seminar Paper</title>
      <link>https://bartschat.github.io/post/Seminar_Paper_Success_Factors_of_Video_Game_Consoles_Sketchnotes_Presentation/</link>
      <pubDate>Tue, 21 Feb 2017 17:46:55 +0100</pubDate>
      
      <guid>https://bartschat.github.io/post/Seminar_Paper_Success_Factors_of_Video_Game_Consoles_Sketchnotes_Presentation/</guid>
      <description>

&lt;h2 id=&#34;introduction-taken-from-the-final-paper:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Introduction taken from the final paper&lt;/h2&gt;

&lt;p&gt;This seminar paper aims to fill this gap and provide a comprehensive, conceptual framework
to answer the question: “Which ingredients turn a video game console into a
successful platform for a specific target group?” To create this framework I will first
lay out the foundations by introducing the gaming industry’s main characteristics, i.e.
that it is a two-sided, hedonic market catering to different gamer personae as its target
audience and experiences a regular soft reset every five to seven years with the
introduction of a new console generation.[Gallagher and Park, 2002]&lt;/p&gt;

&lt;p&gt;I will then use the framework provided by [Hennig-Thurau and Marchand, 2013] as a
starting point and expand it to establish a holistic picture of a video game platform
 using the current state of scientific research. To conclude this paper I will
apply the framework onto the the “console war” of the seventh console generation and
discuss its limitations and highlight necessary future research.&lt;/p&gt;

&lt;h2 id=&#34;snapshots-from-the-development-phase:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Snapshots from the development phase&lt;/h2&gt;

&lt;h3 id=&#34;framework-development-with-sheets-of-paper-on-the-floor:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Framework development with sheets of paper on the floor&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Framework_Development_Paper_on_Floor.jpg&#34; alt=&#34;Framework development with sheets of paper on the floor&#34; /&gt;
Physical elements that can be touched and pushed around proved very helpful
during the design process of the framework. Paper cards with icons sketched on
them are easy to create and can be used to visualize complex structures.&lt;/p&gt;

&lt;h3 id=&#34;final-framework-as-published-in-the-paper:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Final framework as published in the paper&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Framework.png&#34; alt=&#34;Final framework as published in the paper&#34; /&gt;
The final version of the framework that made it into the actual seminar paper
looks a lot sleeker that the draft made out of the paper cards but nevertheless
it is just a fancy remake.&lt;/p&gt;

&lt;p&gt;The article &lt;a href=&#34;https://bartschat.github.io/post/thesis_workflow/&#34;&gt;&amp;ldquo;My thesis workflow - Academic writing with a Markdown/LaTeX/Bibtex combination on OSX&amp;rdquo;&lt;/a&gt;
explains how Markdown and LaTeX are combined to generate the PDF version of the paper.&lt;/p&gt;

&lt;h3 id=&#34;sketchnote-of-the-presentation:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Sketchnote of the presentation&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Framework_Development_Sketchnote.jpg&#34; alt=&#34;Sketchnote of the presentation development&#34; /&gt;
After handing in the paper with the &lt;a href=&#34;http://www.marketingcenter.de/lmm/&#34;&gt;Department of Marketing &amp;amp; Media Research&lt;/a&gt;
I had to prepare a presentation of the paper&amp;rsquo;s main topics. My first idea was to
develop the framework &amp;ldquo;live&amp;rdquo; on a flipchart while giving the talk but after some
early experiments decided against that option because my live sketching abilities
are not on the required skill level.&lt;/p&gt;

&lt;p&gt;The second option was to prepare a &amp;ldquo;classic&amp;rdquo; slideshow. But as I developed the slides
with the help of a technique called &lt;a href=&#34;https://www.youtube.com/results?search_query=sketchnotes&#34;&gt;&amp;ldquo;sketchnoting&amp;rdquo;&lt;/a&gt;
my sketchnotes turned into some kind of presentation on their own. So I just
polished them a little bit and put them together in a nice sequence. The notes
were created using the app &lt;a href=&#34;http://tayasui.com/sketches/&#34;&gt;&amp;ldquo;Sketches&amp;rdquo;&lt;/a&gt; on the iPad,
uploaded to my Dropbox, then edited with &lt;a href=&#34;https://www.gimp.org/&#34;&gt;the GIMP&lt;/a&gt; and
finally put together with &lt;a href=&#34;https://www.libreoffice.org/discover/impress/&#34;&gt;Libre Office&amp;rsquo;s Impress&lt;/a&gt;.
&lt;img src=&#34;https://bartschat.github.io/img/Framework_Presentation.png&#34; alt=&#34;Framework in the final presentation&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;ressources:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Ressources&lt;/h1&gt;

&lt;h2 id=&#34;downloads:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Downloads&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Seminar_Paper_Title.png&#34; alt=&#34;Final title page of the seminar paper&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bartschat/Seminar_Paper_MEP_XI/blob/master/Seminar_Paper_Lars_Bartschat_MEP_XI_20161125.pdf&#34;&gt;Download the Seminar Paper &amp;ldquo;Success Factors of Video Game Consoles&amp;rdquo; as PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bartschat/Seminar_Paper_MEP_XI/blob/master/Seminar_Paper_Lars_Bartschat_MEP_XI_20161125.tex&#34;&gt;Download the LaTeX source file of the Seminar Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bartschat/Seminar_Paper_MEP_XI/blob/master/Seminar%20Paper%20Lars%20Bartschat%20Presentation%20Feb%2016.pdf&#34;&gt;Download the presentation as PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bartschat/Seminar_Paper_MEP_XI/blob/master/Seminar%20Paper%20Lars%20Bartschat%20Presentation%20Feb%2016.odp&#34;&gt;Download the presentation as ODP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;links:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.marketingcenter.de/lmm/&#34;&gt;Website of the Department of Marketing &amp;amp; Media Research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/thorsten.hennigthurau&#34;&gt;Facebook page of Prof. Hennig-Thurau&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://weiterbildung.uni-muenster.de/de/masterstudiengaenge/emba-marketing/marketingmba/&#34;&gt;Website of the WWU Weiterbildung GmbH&amp;rsquo;s MBA program (german)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Access your Dropbox from the Raspberry Pi via SSHFS</title>
      <link>https://bartschat.github.io/post/Access_your_Dropbox_from_the_RaspberryPi_via_SSHFS/</link>
      <pubDate>Thu, 06 Oct 2016 20:02:53 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/Access_your_Dropbox_from_the_RaspberryPi_via_SSHFS/</guid>
      <description>

&lt;h1 id=&#34;you-have-setup-your-raspberry-pi-and-are-ready-to-roll-but-your-dropbox-is-missing:5bce53e4b2274216ed503fb8319e2aa6&#34;&gt;You have setup your Raspberry Pi and are ready to roll but your Dropbox is missing?&lt;/h1&gt;

&lt;p&gt;If you have been in the situation that you need access to your Dropbox from your Raspberry Pi
then you will most propably know that Dropbox has a Linux client available but it&amp;rsquo;s X86 only.
So, as the RPi is an ARM chip you are kinda lost. But you can use a workaround if you have a
X86 based second machine at your disposal that is already setup with your Dropbox account and
that is able to run an SSH server, e.g. any Linux machine will do or your macOS box. Just make
sure that the SSH server is reachable from the RPi.&lt;/p&gt;

&lt;h2 id=&#34;install-sshfs-on-the-rpi:5bce53e4b2274216ed503fb8319e2aa6&#34;&gt;Install SSHFS on the RPi&lt;/h2&gt;

&lt;p&gt;For this example I will assume that your RPi is running a Debian based Linux distribution like
Raspbian or Ubuntu. Access a shell, e.g. open a terminal window if you are running the graphical
UI or just use the CLI as usual if you are into that.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install sshfs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s nearly all the magic it takes&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;mount-the-dropbox-folder-via-sshfs:5bce53e4b2274216ed503fb8319e2aa6&#34;&gt;Mount the Dropbox folder via SSHFS&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sshfs username@hostname:/path/to/Dropbox /path/where/to/mount/the/Dropbox
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sshfs lars@larsmacbook:/Users/lars/Dropbox /home/pi/Dropbox
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enter the correct password or make sure you have the needed ssh keys available and you are ready to
access your Dropbox in the mount target folder.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automated embedding of tables from CSV files and creating nice looking graphs in your MarkDown/LaTeX papers</title>
      <link>https://bartschat.github.io/post/auto_embedding_tables_and_graphs_in_md_latex/</link>
      <pubDate>Wed, 14 Sep 2016 17:53:34 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/auto_embedding_tables_and_graphs_in_md_latex/</guid>
      <description>

&lt;p&gt;Generally speaking I think, that there is no need to explain why we want to embed tables and graphs in our academic papers, it´s our daily bread as students, Ph.D. candidates and so on. There are always data waiting to be analyzed and displayed in a way that is a) good looking and b) clearly arranged to foster readability and easy of understanding.&lt;/p&gt;

&lt;h2 id=&#34;what-we-re-looking-to-create:04e9607b59a5c60239b3a2518f819660&#34;&gt;What we´re looking to create&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/tables.png&#34; alt=&#34;Auto-generated table&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/graphs.png&#34; alt=&#34;Auto-generated graph&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;prerequisites:04e9607b59a5c60239b3a2518f819660&#34;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;This description is based on my thesis workflow that I describe in detail in another article here on my blog: &lt;a href=&#34;https://bartschat.github.io/post/thesis_workflow/&#34;&gt;My thesis workflow - Academic writing with a Markdown/LaTeX/Bibtex combination on OSX&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;create-a-table-from-a-csv:04e9607b59a5c60239b3a2518f819660&#34;&gt;Create a table from a *.CSV&lt;/h2&gt;

&lt;p&gt;We are working under the assumption that your data is available in one or more plain text ASCII *.csv file(s) in the root directory of your paper, maybe looking something like this simple example:&lt;/p&gt;

&lt;h3 id=&#34;geekbench-apple-csv:04e9607b59a5c60239b3a2518f819660&#34;&gt;geekbench_apple.csv&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Product Release Score
iPhone 6s plus  2015    4341
iPhone 6s   2015    4331
iPhone 6 plus   2014    2883
iPhone 6    2014    2877
iPhone 5s   2013    2510
iPhone 5    2012    1271
iPhone 4s   2011    404
iPhone 4    2010    206
iPhone 3gs  2009    149
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;geekbench-samsung-csv:04e9607b59a5c60239b3a2518f819660&#34;&gt;geekbench_samsung.csv&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Product,Release,Score
{},{},{}
Samsung Galaxy S,2010,262
Samsung Galaxy S II,2011,481
Samsung Galaxy S III,2012,1285
Samsung Galaxy S 4,2013,2676
Samsung Galaxy S 5,2014,2805
Samsung Galaxy S 6 ,2015,4262
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This data is a small collection of the geekbench scores of some mobile handsets. Geekbench is a benchmarking tool for a diverse set of computing platforms and owned by &lt;a href=&#34;http://www.primatelabs.com/&#34;&gt;Primate Labs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To import the data and generate a simple table we make use of the LaTeX package &amp;ldquo;csv_simple&amp;rdquo;. It is included in our &amp;ldquo;header.tex&amp;rdquo; file that is part of the beforementioned workflow:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\usepackage{csvsimple}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now all we have to do is to import the two *.csv files in our MarkDown file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\begin{center}
    \csvautotabular{geekbench_apple.csv}
    \csvautotabular{geekbench_samsung.csv}
\end{center}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The result:
&lt;img src=&#34;https://bartschat.github.io/img/tables.png&#34; alt=&#34;Auto-generated table&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;create-a-graph-from-a-csv:04e9607b59a5c60239b3a2518f819660&#34;&gt;Create a graph from a *.CSV&lt;/h2&gt;

&lt;p&gt;The next step is to visualize the data, because looking at tables is usually a little bit tiring honestly. Creating a graph is a little bit more complex that just building some bland tables, so there will a little bit more LaTeX code in our MarkDown file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\begin{figure}
\begin{tikzpicture} 
       \begin{axis} 
        [
                width=\linewidth*.9, % Scale the plot to \linewidth
                grid=major, 
                grid style={dashed,gray!30},
                xlabel=Release, % Set the labels
                ylabel=Geekbench Score,
                %x unit=\si{\volt}, % Set the respective units
                %y unit=\si{\ampere},
                legend pos = north west,
                x tick label style = {rotate = 90, anchor=east, /pgf/number format/1000 sep= },
                y tick label style = {/pgf/number format/1000 sep= },
                xtick distance = 1,
                minor x tick num = 1,
                ymin = 0, xmin = 2009,
                ymax = 4500, xmax = 2016,
                legend entries = {$Apple$, $Samsung$},
            ]
            \addplot table [col sep=comma, x = Release, y = Score]{geekbench_apple.csv}; 
            \addplot table [col sep=comma, x = Release, y = Score]{geekbench_samsung.csv}; 
        \end{axis} 
     \end{tikzpicture}
    \caption{Entwicklung der Leistungsfähigkeit von Smartphones Quelle: Eigene Darstellung, Daten: Primate Labs}
    \label{abb:geekbench}
\end{figure} 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On the first look, all of this magical code seems confusing, but it´s more or less self explaining. We start with the creation of a LaTeX &lt;em&gt;figure&lt;/em&gt; and a &lt;em&gt;tikzpicture&lt;/em&gt;, which is basically the container which will be filled with the graph. The graph itself is the &lt;em&gt;axis&lt;/em&gt; environment, in which the graph is set up, labelled and the legend created. With the &lt;em&gt;addplot&lt;/em&gt; command the according *.csv files will be parsed and the graph will be &amp;ldquo;painted&amp;rdquo; in LaTeX. The whole process is finished nicely with a fitting &lt;em&gt;caption&lt;/em&gt; and a &lt;em&gt;label&lt;/em&gt; so we can make references in the text blocks to the graph.&lt;/p&gt;

&lt;p&gt;The result:
&lt;img src=&#34;https://bartschat.github.io/img/graphs.png&#34; alt=&#34;Auto-generated table&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My thesis workflow - Academic writing with a Markdown/LaTeX/Bibtex combination on OSX</title>
      <link>https://bartschat.github.io/post/thesis_workflow/</link>
      <pubDate>Wed, 03 Aug 2016 18:05:21 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/thesis_workflow/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/thesis_workflow.png&#34; alt=&#34;Thesis workflow graphical display&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;prequisites:c090ac25567b03c65b47b1965f48ade3&#34;&gt;Prequisites&lt;/h1&gt;

&lt;h2 id=&#34;preliminary-remarks:c090ac25567b03c65b47b1965f48ade3&#34;&gt;Preliminary remarks&lt;/h2&gt;

&lt;p&gt;This description is still a work in progress. I´ll have to write the full text and create a new version
of the graphical workflow to include bibtex for citation management. Stay tuned&amp;hellip;&lt;/p&gt;

&lt;p&gt;Updated 2016-08-03: Small changes in compile.sh and a short workflow description&lt;/p&gt;

&lt;h2 id=&#34;needed-software:c090ac25567b03c65b47b1965f48ade3&#34;&gt;Needed software:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tug.org/mactex/&#34; title=&#34;Link to MacTex on tug.org&#34;&gt;MacTeX - The TeX Distribution for OSX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pandoc.org/&#34; title=&#34;Link to pandoc.org&#34;&gt;Pandoc - A universal document converter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34; title=&#34;Link to git homepage&#34;&gt;git - a free and open source distributed version control system &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href=&#34;https://www.dropbox.com/&#34; title=&#34;Link to dropbox homepage&#34;&gt;Dropbox - cloud file service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;short-description-of-the-workflow:c090ac25567b03c65b47b1965f48ade3&#34;&gt;Short description of the workflow:&lt;/h1&gt;

&lt;p&gt;The basic workflow is easily described in a few words: I write my paper in the form of several markdown files that live together in one folder with a simple shell script called &amp;ldquo;compile.sh&amp;rdquo; and some LaTeX files that include footer, header and some configuration settings. As an example you can take a look at the file &amp;ldquo;executive.md&amp;rdquo; containing the executive summary of the paper (actually right now it´s a dummy file):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\section*{Executive Summary}
\addcontentsline{toc}{section}{Executive Summary}

*Ziel* - Beeindrucken

*Vorgehen* - Spannend

*Ergebnisse* - Grandios

*Limitationen* - Keine

*Praktische Implikationen* - Alles graue Theorie

*Mehrwert* - Keiner, aber war schön
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You might notice the two LaTeX macros in the first two lines. As this procedure is still work in progress I did not change those into markdown. I´ll have to check out how to create sections in markdown that will be taken into the table of contents when the typesetting is taking place.&lt;/p&gt;

&lt;h2 id=&#34;config-tex:c090ac25567b03c65b47b1965f48ade3&#34;&gt;config.tex:&lt;/h2&gt;

&lt;p&gt;The configuration is done in the &amp;ldquo;config.tex&amp;rdquo; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\newcommand{\Arbeitstitel}
{
    Titel der Arbeit
}
\newcommand{\Autor}
{
    Lars Bartschat
}

\newcommand{\MatrikelNr}
{
    123123123
}

\newcommand{\EmailAdresse}
{
    meinname@meinserver.de
}
\newcommand{\Arbeitsart}
{
    Projektarbeit
}
\newcommand{\Studiengang}
{
    Marketing Executive Program 
}
\newcommand{\Hochschule}
{
    Westfälischen Wilhelms-Universität Münster
}
\newcommand{\Lehrstuhl}
{
    Lehrstuhl für Mustermänner, Münster
}   
\newcommand{\Themensteller}
{
    Prof. Dr. Mustermann
}       
\newcommand{\Betreuer}
{
    Dipl.-Kfm. Mustermann
}       
\newcommand{\Ausgabedatum}
{
    1.1.2016
}       
\newcommand{\Abgabedatum}
{
    31.12.2016
}
\newcommand{\Ort}
{
    Münster
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Basically this file is just defining a lot of LaTeX macros that will be used in the markdown files so that the structure can be reused in a comfortable way for the next paper.&lt;/p&gt;

&lt;h2 id=&#34;compile-sh-shell-script:c090ac25567b03c65b47b1965f48ade3&#34;&gt;compile.sh shell script:&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/zsh

# &amp;quot;translate&amp;quot; the markdown files into latex files

pandoc -f markdown -t latex ./Executive.md -o Executive.tex
pandoc -f markdown -t latex ./Abkürzungen.md -o Abkürzungen.tex
pandoc -f markdown -t latex ./Hauptteil.md -o Hauptteil.tex
pandoc -f markdown -t latex ./Eidesstatt.md -o Eidesstatt.tex

# concatenate all latex files into one

cat ./header.tex &amp;gt; output.tex
cat ./Executive.tex &amp;gt;&amp;gt; output.tex
cat ./Abbildungen.tex &amp;gt;&amp;gt; output.tex
cat ./Abkürzungen.tex &amp;gt;&amp;gt; output.tex
cat ./Inhaltsverzeichnis.tex &amp;gt;&amp;gt; output.tex
cat ./Hauptteil.tex &amp;gt;&amp;gt; output.tex
cat ./Literatur.tex &amp;gt;&amp;gt; output.tex
cat ./Eidesstatt.tex &amp;gt;&amp;gt; output.tex
cat ./footer.tex &amp;gt;&amp;gt; output.tex

# typeset the latex file and create a pdf file

latexmk -gg -pdf ./output

# rudimentary command line argument interpretation

if [ $# -eq 2 ]
    then
        if [ &amp;quot;$1&amp;quot; == &amp;quot;push&amp;quot; ]
            then
                # push all files into git repository with commit message
                /usr/local/bin/git add *
                /usr/local/bin/git commit  -m &amp;quot;$2&amp;quot;
                /usr/local/bin/git push
            else
                echo &amp;quot;Huh?&amp;quot;
                exit 1
            fi
    else
        echo &amp;quot;Not pushed to git repo!&amp;quot;
    fi
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;what-does-compile-sh-do:c090ac25567b03c65b47b1965f48ade3&#34;&gt;What does compile.sh do?&lt;/h2&gt;

&lt;p&gt;The compile script just takes all the markdown files and uses pandoc to translate them into LaTex documents. In the next step all LaTeX documents will be concatenated into one &amp;ldquo;big&amp;rdquo; LaTeX file in the given order. Finally the LaTeX file is typesetted and a pdf file is written as output.&lt;/p&gt;

&lt;p&gt;In the case that the user supplies two command line arguments, with the first being &amp;ldquo;push&amp;rdquo; and the second being the commit message, the whole project is commited and pushed into a git repository for version control and backup purposes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Make your own interval training mixtape</title>
      <link>https://bartschat.github.io/post/interval_training_mixtape/</link>
      <pubDate>Thu, 21 Apr 2016 20:24:13 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/interval_training_mixtape/</guid>
      <description>&lt;p&gt;Interval training is nice but how to measure the intervals in a comfortable way? That&amp;rsquo;s been my problem after I decided to pickup heavybag training after a while. I was looking for a nice way to keep track of my round and break times without having to look a watch all the time. I tried to use an interval timer on my iPhone. Nice, but not what I really wanted. After thinking a while about it I had an idea: Why not mix and edit some music so that active work times and break times would be clearly distuingishable? And I wanted a bell. :)
So I needed three things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An audio editing software&lt;/li&gt;
&lt;li&gt;a bell sound&lt;/li&gt;
&lt;li&gt;music&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The third thing was easy, just a short look in my iTunes library and some hours later a I had some songs picked:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/00011.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I created two playlists:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sports&lt;/li&gt;
&lt;li&gt;Sports break&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first list consists of songs with a duration of at least 3:00mins, as I wanted to do 3:00mins rounds on the bag. And they had to be uptempo songs so I chose some metal and hard rock. The second list consists of slower songs for my breaks.&lt;/p&gt;

&lt;p&gt;Now I needed a bell like the ones used in the boxing ring. Via Google I found &lt;a href=&#34;http://www.freesound.org/&#34;&gt;http://www.freesound.org/&lt;/a&gt; and signed on. A fitting sample was quick to be found here: &lt;a href=&#34;http://www.freesound.org/samplesViewSingle.php?id=66951&#34;&gt;http://www.freesound.org/samplesViewSingle.php?id=66951&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s get mixing. :)&lt;/p&gt;

&lt;p&gt;I used Audacity (&lt;a href=&#34;http://audacity.sourceforge.net/&#34;&gt;http://audacity.sourceforge.net/&lt;/a&gt;) for editing under Mac OS X, but Audacity will run under Windows or Linux as well. Starting it up you will encounter the folling screen:
&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00021.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To begin editing I opened my prepared playlist in iTunes, selected my first song and right clicked it &amp;ndash;&amp;gt; Show in Finder&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00041.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now I could drag and drop the file into Audacity where it would be imported. Yeah, my first editable track. To trim the volume to my likings I used the Peak Limiter which can be found in the menu &amp;ldquo;Effects - Apple: AUPeakLimiter&amp;rdquo;. With the slider I could now limit the volume:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00151.png?w=307&amp;amp;h=127&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now I marked the first five seconds of the track with the mouse cursor. Or one can use the text boxes below the track area and just type which time frames are to be selected. I wanted the song to be faded in and via &amp;ldquo;Effects: FadeIn&amp;rdquo; this was accomplished. The timeframes 2:55 to 3:00 were faded out in the same way.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00141.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now the most important part: My bell! :) The wave file from Freesound was dropped into Audacity:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00121.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t quite like the sound of it, so I decided to pitch it down a little bit with the &amp;ldquo;Effects: Tone Pitch&amp;rdquo;. I only went down four semitones:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00171.png?w=248&amp;amp;h=210&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I was nearly down with the first song now. But Audacity projects won&amp;rsquo;t play on any device so I had to export the song via the file menu. First I had to setup the basics, e.g. filename, destination and sound quality. Afterwards I had to put in the metadata:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00181.png?w=373&amp;amp;h=245&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I filled the genre field with the entry &amp;ldquo;Intervall Training&amp;rdquo; to make handling the songs in iTunes more comfortable. After the Audacity export was complete I imported the file into my iTunes library and created a new, smart playlist (not sure whether they are called smart or intelligent playlists in english) with the following criteria:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00191.png?w=482&amp;amp;h=149&#34; /&gt;
(genre is containing Intervall Training)&lt;/p&gt;

&lt;p&gt;The first song was finished now. In the same way I edited the next piece of music I wanted to use for my breaks. The only difference was that I chose 30 seconds as break duration. :) The playlist looked like this:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00051.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now I could plug in my iPod, sync the playlist and hit the bag. Ok, I did more than two songs. ;)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>