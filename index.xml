<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lars` github/Hugo powered blog</title>
    <link>https://bartschat.github.io/</link>
    <description>Recent content on Lars` github/Hugo powered blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Feb 2017 17:46:55 +0100</lastBuildDate>
    <atom:link href="https://bartschat.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Success Factors of Video Game Consoles - A Seminar Paper</title>
      <link>https://bartschat.github.io/post/Seminar_Paper_Success_Factors_of_Video_Game_Consoles_Sketchnotes_Presentation/</link>
      <pubDate>Tue, 21 Feb 2017 17:46:55 +0100</pubDate>
      
      <guid>https://bartschat.github.io/post/Seminar_Paper_Success_Factors_of_Video_Game_Consoles_Sketchnotes_Presentation/</guid>
      <description>

&lt;h2 id=&#34;introduction-taken-from-the-final-paper:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Introduction taken from the final paper&lt;/h2&gt;

&lt;p&gt;This seminar paper aims to fill this gap and provide a comprehensive, conceptual framework
to answer the question: “Which ingredients turn a video game console into a
successful platform for a specific target group?” To create this framework I will first
lay out the foundations by introducing the gaming industry’s main characteristics, i.e.
that it is a two-sided, hedonic market catering to different gamer personae as its target
audience and experiences a regular soft reset every five to seven years with the
introduction of a new console generation.[Gallagher and Park, 2002]&lt;/p&gt;

&lt;p&gt;I will then use the framework provided by [Hennig-Thurau and Marchand, 2013] as a
starting point and expand it to establish a holistic picture of a video game platform
 using the current state of scientific research. To conclude this paper I will
apply the framework onto the the “console war” of the seventh console generation and
discuss its limitations and highlight necessary future research.&lt;/p&gt;

&lt;h2 id=&#34;snapshots-from-the-development-phase:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Snapshots from the development phase&lt;/h2&gt;

&lt;h3 id=&#34;framework-development-with-sheets-of-paper-on-the-floor:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Framework development with sheets of paper on the floor&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Framework_Development_Paper_on_Floor.jpg&#34; alt=&#34;Framework development with sheets of paper on the floor&#34; /&gt;
Physical elements that can be touched and pushed around proved very helpful
during the design process of the framework. Paper cards with icons sketched on
them are easy to create and can be used to visualize complex structures.&lt;/p&gt;

&lt;h3 id=&#34;final-framework-as-published-in-the-paper:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Final framework as published in the paper&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Framework.png&#34; alt=&#34;Final framework as published in the paper&#34; /&gt;
The final version of the framework that made it into the actual seminar paper
looks a lot sleeker that the draft made out of the paper cards but nevertheless
it is just a fancy remake.&lt;/p&gt;

&lt;p&gt;The article &lt;a href=&#34;https://bartschat.github.io/post/thesis_workflow/&#34;&gt;&amp;ldquo;My thesis workflow - Academic writing with a Markdown/LaTeX/Bibtex combination on OSX&amp;rdquo;&lt;/a&gt;
explains how Markdown and LaTeX are combined to generate the PDF version of the paper.&lt;/p&gt;

&lt;h3 id=&#34;sketchnote-of-the-presentation:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Sketchnote of the presentation&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Framework_Development_Sketchnote.jpg&#34; alt=&#34;Sketchnote of the presentation development&#34; /&gt;
After handing in the paper with the &lt;a href=&#34;http://www.marketingcenter.de/lmm/&#34;&gt;Department of Marketing &amp;amp; Media Research&lt;/a&gt;
I had to prepare a presentation of the paper&amp;rsquo;s main topics. My first idea was to
develop the framework &amp;ldquo;live&amp;rdquo; on a flipchart while giving the talk but after some
early experiments decided against that option because my live sketching abilities
are not on the required skill level.&lt;/p&gt;

&lt;p&gt;The second option was to prepare a &amp;ldquo;classic&amp;rdquo; slideshow. But as I developed the slides
with the help of a technique called &lt;a href=&#34;https://www.youtube.com/results?search_query=sketchnotes&#34;&gt;&amp;ldquo;sketchnoting&amp;rdquo;&lt;/a&gt;
my sketchnotes turned into some kind of presentation on their own. So I just
polished them a little bit and put them together in a nice sequence. The notes
were created using the app &lt;a href=&#34;http://tayasui.com/sketches/&#34;&gt;&amp;ldquo;Sketches&amp;rdquo;&lt;/a&gt; on the iPad,
uploaded to my Dropbox, then edited with &lt;a href=&#34;https://www.gimp.org/&#34;&gt;the GIMP&lt;/a&gt; and
finally put together with &lt;a href=&#34;https://www.libreoffice.org/discover/impress/&#34;&gt;Libre Office&amp;rsquo;s Impress&lt;/a&gt;.
&lt;img src=&#34;https://bartschat.github.io/img/Framework_Presentation.png&#34; alt=&#34;Framework in the final presentation&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;ressources:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Ressources&lt;/h1&gt;

&lt;h2 id=&#34;downloads:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Downloads&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/Seminar_Paper_Title.png&#34; alt=&#34;Final title page of the seminar paper&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bartschat/Seminar_Paper_MEP_XI/blob/master/Seminar_Paper_Lars_Bartschat_MEP_XI_20161125.pdf&#34;&gt;Download the Seminar Paper &amp;ldquo;Success Factors of Video Game Consoles&amp;rdquo; as PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bartschat/Seminar_Paper_MEP_XI/blob/master/Seminar_Paper_Lars_Bartschat_MEP_XI_20161125.tex&#34;&gt;Download the LaTeX source file of the Seminar Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bartschat/Seminar_Paper_MEP_XI/blob/master/Seminar%20Paper%20Lars%20Bartschat%20Presentation%20Feb%2016.pdf&#34;&gt;Download the presentation as PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bartschat/Seminar_Paper_MEP_XI/blob/master/Seminar%20Paper%20Lars%20Bartschat%20Presentation%20Feb%2016.odp&#34;&gt;Download the presentation as ODP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;links:bd51fef462402e97e879b5537fe7dc3a&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.marketingcenter.de/lmm/&#34;&gt;Website of the Department of Marketing &amp;amp; Media Research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/thorsten.hennigthurau&#34;&gt;Facebook page of Prof. Hennig-Thurau&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://weiterbildung.uni-muenster.de/de/masterstudiengaenge/emba-marketing/marketingmba/&#34;&gt;Website of the WWU Weiterbildung GmbH&amp;rsquo;s MBA program (german)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Access your Dropbox from the Raspberry Pi via SSHFS</title>
      <link>https://bartschat.github.io/post/Access_your_Dropbox_from_the_RaspberryPi_via_SSHFS/</link>
      <pubDate>Thu, 06 Oct 2016 20:02:53 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/Access_your_Dropbox_from_the_RaspberryPi_via_SSHFS/</guid>
      <description>

&lt;h1 id=&#34;you-have-setup-your-raspberry-pi-and-are-ready-to-roll-but-your-dropbox-is-missing:5bce53e4b2274216ed503fb8319e2aa6&#34;&gt;You have setup your Raspberry Pi and are ready to roll but your Dropbox is missing?&lt;/h1&gt;

&lt;p&gt;If you have been in the situation that you need access to your Dropbox from your Raspberry Pi
then you will most propably know that Dropbox has a Linux client available but it&amp;rsquo;s X86 only.
So, as the RPi is an ARM chip you are kinda lost. But you can use a workaround if you have a
X86 based second machine at your disposal that is already setup with your Dropbox account and
that is able to run an SSH server, e.g. any Linux machine will do or your macOS box. Just make
sure that the SSH server is reachable from the RPi.&lt;/p&gt;

&lt;h2 id=&#34;install-sshfs-on-the-rpi:5bce53e4b2274216ed503fb8319e2aa6&#34;&gt;Install SSHFS on the RPi&lt;/h2&gt;

&lt;p&gt;For this example I will assume that your RPi is running a Debian based Linux distribution like
Raspbian or Ubuntu. Access a shell, e.g. open a terminal window if you are running the graphical
UI or just use the CLI as usual if you are into that.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install sshfs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s nearly all the magic it takes&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;mount-the-dropbox-folder-via-sshfs:5bce53e4b2274216ed503fb8319e2aa6&#34;&gt;Mount the Dropbox folder via SSHFS&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sshfs username@hostname:/path/to/Dropbox /path/where/to/mount/the/Dropbox
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sshfs lars@larsmacbook:/Users/lars/Dropbox /home/pi/Dropbox
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enter the correct password or make sure you have the needed ssh keys available and you are ready to
access your Dropbox in the mount target folder.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automated embedding of tables from CSV files and creating nice looking graphs in your MarkDown/LaTeX papers</title>
      <link>https://bartschat.github.io/post/auto_embedding_tables_and_graphs_in_md_latex/</link>
      <pubDate>Wed, 14 Sep 2016 17:53:34 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/auto_embedding_tables_and_graphs_in_md_latex/</guid>
      <description>

&lt;p&gt;Generally speaking I think, that there is no need to explain why we want to embed tables and graphs in our academic papers, it´s our daily bread as students, Ph.D. candidates and so on. There are always data waiting to be analyzed and displayed in a way that is a) good looking and b) clearly arranged to foster readability and easy of understanding.&lt;/p&gt;

&lt;h2 id=&#34;what-we-re-looking-to-create:04e9607b59a5c60239b3a2518f819660&#34;&gt;What we´re looking to create&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/tables.png&#34; alt=&#34;Auto-generated table&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/graphs.png&#34; alt=&#34;Auto-generated graph&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;prerequisites:04e9607b59a5c60239b3a2518f819660&#34;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;This description is based on my thesis workflow that I describe in detail in another article here on my blog: &lt;a href=&#34;https://bartschat.github.io/post/thesis_workflow/&#34;&gt;My thesis workflow - Academic writing with a Markdown/LaTeX/Bibtex combination on OSX&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;create-a-table-from-a-csv:04e9607b59a5c60239b3a2518f819660&#34;&gt;Create a table from a *.CSV&lt;/h2&gt;

&lt;p&gt;We are working under the assumption that your data is available in one or more plain text ASCII *.csv file(s) in the root directory of your paper, maybe looking something like this simple example:&lt;/p&gt;

&lt;h3 id=&#34;geekbench-apple-csv:04e9607b59a5c60239b3a2518f819660&#34;&gt;geekbench_apple.csv&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Product Release Score
iPhone 6s plus  2015    4341
iPhone 6s   2015    4331
iPhone 6 plus   2014    2883
iPhone 6    2014    2877
iPhone 5s   2013    2510
iPhone 5    2012    1271
iPhone 4s   2011    404
iPhone 4    2010    206
iPhone 3gs  2009    149
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;geekbench-samsung-csv:04e9607b59a5c60239b3a2518f819660&#34;&gt;geekbench_samsung.csv&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Product,Release,Score
{},{},{}
Samsung Galaxy S,2010,262
Samsung Galaxy S II,2011,481
Samsung Galaxy S III,2012,1285
Samsung Galaxy S 4,2013,2676
Samsung Galaxy S 5,2014,2805
Samsung Galaxy S 6 ,2015,4262
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This data is a small collection of the geekbench scores of some mobile handsets. Geekbench is a benchmarking tool for a diverse set of computing platforms and owned by &lt;a href=&#34;http://www.primatelabs.com/&#34;&gt;Primate Labs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To import the data and generate a simple table we make use of the LaTeX package &amp;ldquo;csv_simple&amp;rdquo;. It is included in our &amp;ldquo;header.tex&amp;rdquo; file that is part of the beforementioned workflow:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\usepackage{csvsimple}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now all we have to do is to import the two *.csv files in our MarkDown file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\begin{center}
    \csvautotabular{geekbench_apple.csv}
    \csvautotabular{geekbench_samsung.csv}
\end{center}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The result:
&lt;img src=&#34;https://bartschat.github.io/img/tables.png&#34; alt=&#34;Auto-generated table&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;create-a-graph-from-a-csv:04e9607b59a5c60239b3a2518f819660&#34;&gt;Create a graph from a *.CSV&lt;/h2&gt;

&lt;p&gt;The next step is to visualize the data, because looking at tables is usually a little bit tiring honestly. Creating a graph is a little bit more complex that just building some bland tables, so there will a little bit more LaTeX code in our MarkDown file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\begin{figure}
\begin{tikzpicture} 
       \begin{axis} 
        [
                width=\linewidth*.9, % Scale the plot to \linewidth
                grid=major, 
                grid style={dashed,gray!30},
                xlabel=Release, % Set the labels
                ylabel=Geekbench Score,
                %x unit=\si{\volt}, % Set the respective units
                %y unit=\si{\ampere},
                legend pos = north west,
                x tick label style = {rotate = 90, anchor=east, /pgf/number format/1000 sep= },
                y tick label style = {/pgf/number format/1000 sep= },
                xtick distance = 1,
                minor x tick num = 1,
                ymin = 0, xmin = 2009,
                ymax = 4500, xmax = 2016,
                legend entries = {$Apple$, $Samsung$},
            ]
            \addplot table [col sep=comma, x = Release, y = Score]{geekbench_apple.csv}; 
            \addplot table [col sep=comma, x = Release, y = Score]{geekbench_samsung.csv}; 
        \end{axis} 
     \end{tikzpicture}
    \caption{Entwicklung der Leistungsfähigkeit von Smartphones Quelle: Eigene Darstellung, Daten: Primate Labs}
    \label{abb:geekbench}
\end{figure} 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On the first look, all of this magical code seems confusing, but it´s more or less self explaining. We start with the creation of a LaTeX &lt;em&gt;figure&lt;/em&gt; and a &lt;em&gt;tikzpicture&lt;/em&gt;, which is basically the container which will be filled with the graph. The graph itself is the &lt;em&gt;axis&lt;/em&gt; environment, in which the graph is set up, labelled and the legend created. With the &lt;em&gt;addplot&lt;/em&gt; command the according *.csv files will be parsed and the graph will be &amp;ldquo;painted&amp;rdquo; in LaTeX. The whole process is finished nicely with a fitting &lt;em&gt;caption&lt;/em&gt; and a &lt;em&gt;label&lt;/em&gt; so we can make references in the text blocks to the graph.&lt;/p&gt;

&lt;p&gt;The result:
&lt;img src=&#34;https://bartschat.github.io/img/graphs.png&#34; alt=&#34;Auto-generated table&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My thesis workflow - Academic writing with a Markdown/LaTeX/Bibtex combination on OSX</title>
      <link>https://bartschat.github.io/post/thesis_workflow/</link>
      <pubDate>Wed, 03 Aug 2016 18:05:21 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/thesis_workflow/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://bartschat.github.io/img/thesis_workflow.png&#34; alt=&#34;Thesis workflow graphical display&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;prequisites:c090ac25567b03c65b47b1965f48ade3&#34;&gt;Prequisites&lt;/h1&gt;

&lt;h2 id=&#34;preliminary-remarks:c090ac25567b03c65b47b1965f48ade3&#34;&gt;Preliminary remarks&lt;/h2&gt;

&lt;p&gt;This description is still a work in progress. I´ll have to write the full text and create a new version
of the graphical workflow to include bibtex for citation management. Stay tuned&amp;hellip;&lt;/p&gt;

&lt;p&gt;Updated 2016-08-03: Small changes in compile.sh and a short workflow description&lt;/p&gt;

&lt;h2 id=&#34;needed-software:c090ac25567b03c65b47b1965f48ade3&#34;&gt;Needed software:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tug.org/mactex/&#34; title=&#34;Link to MacTex on tug.org&#34;&gt;MacTeX - The TeX Distribution for OSX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pandoc.org/&#34; title=&#34;Link to pandoc.org&#34;&gt;Pandoc - A universal document converter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34; title=&#34;Link to git homepage&#34;&gt;git - a free and open source distributed version control system &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optional: &lt;a href=&#34;https://www.dropbox.com/&#34; title=&#34;Link to dropbox homepage&#34;&gt;Dropbox - cloud file service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;short-description-of-the-workflow:c090ac25567b03c65b47b1965f48ade3&#34;&gt;Short description of the workflow:&lt;/h1&gt;

&lt;p&gt;The basic workflow is easily described in a few words: I write my paper in the form of several markdown files that live together in one folder with a simple shell script called &amp;ldquo;compile.sh&amp;rdquo; and some LaTeX files that include footer, header and some configuration settings. As an example you can take a look at the file &amp;ldquo;executive.md&amp;rdquo; containing the executive summary of the paper (actually right now it´s a dummy file):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\section*{Executive Summary}
\addcontentsline{toc}{section}{Executive Summary}

*Ziel* - Beeindrucken

*Vorgehen* - Spannend

*Ergebnisse* - Grandios

*Limitationen* - Keine

*Praktische Implikationen* - Alles graue Theorie

*Mehrwert* - Keiner, aber war schön
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You might notice the two LaTeX macros in the first two lines. As this procedure is still work in progress I did not change those into markdown. I´ll have to check out how to create sections in markdown that will be taken into the table of contents when the typesetting is taking place.&lt;/p&gt;

&lt;h2 id=&#34;config-tex:c090ac25567b03c65b47b1965f48ade3&#34;&gt;config.tex:&lt;/h2&gt;

&lt;p&gt;The configuration is done in the &amp;ldquo;config.tex&amp;rdquo; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\newcommand{\Arbeitstitel}
{
    Titel der Arbeit
}
\newcommand{\Autor}
{
    Lars Bartschat
}

\newcommand{\MatrikelNr}
{
    123123123
}

\newcommand{\EmailAdresse}
{
    meinname@meinserver.de
}
\newcommand{\Arbeitsart}
{
    Projektarbeit
}
\newcommand{\Studiengang}
{
    Marketing Executive Program 
}
\newcommand{\Hochschule}
{
    Westfälischen Wilhelms-Universität Münster
}
\newcommand{\Lehrstuhl}
{
    Lehrstuhl für Mustermänner, Münster
}   
\newcommand{\Themensteller}
{
    Prof. Dr. Mustermann
}       
\newcommand{\Betreuer}
{
    Dipl.-Kfm. Mustermann
}       
\newcommand{\Ausgabedatum}
{
    1.1.2016
}       
\newcommand{\Abgabedatum}
{
    31.12.2016
}
\newcommand{\Ort}
{
    Münster
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Basically this file is just defining a lot of LaTeX macros that will be used in the markdown files so that the structure can be reused in a comfortable way for the next paper.&lt;/p&gt;

&lt;h2 id=&#34;compile-sh-shell-script:c090ac25567b03c65b47b1965f48ade3&#34;&gt;compile.sh shell script:&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/zsh

# &amp;quot;translate&amp;quot; the markdown files into latex files

pandoc -f markdown -t latex ./Executive.md -o Executive.tex
pandoc -f markdown -t latex ./Abkürzungen.md -o Abkürzungen.tex
pandoc -f markdown -t latex ./Hauptteil.md -o Hauptteil.tex
pandoc -f markdown -t latex ./Eidesstatt.md -o Eidesstatt.tex

# concatenate all latex files into one

cat ./header.tex &amp;gt; output.tex
cat ./Executive.tex &amp;gt;&amp;gt; output.tex
cat ./Abbildungen.tex &amp;gt;&amp;gt; output.tex
cat ./Abkürzungen.tex &amp;gt;&amp;gt; output.tex
cat ./Inhaltsverzeichnis.tex &amp;gt;&amp;gt; output.tex
cat ./Hauptteil.tex &amp;gt;&amp;gt; output.tex
cat ./Literatur.tex &amp;gt;&amp;gt; output.tex
cat ./Eidesstatt.tex &amp;gt;&amp;gt; output.tex
cat ./footer.tex &amp;gt;&amp;gt; output.tex

# typeset the latex file and create a pdf file

latexmk -gg -pdf ./output

# rudimentary command line argument interpretation

if [ $# -eq 2 ]
    then
        if [ &amp;quot;$1&amp;quot; == &amp;quot;push&amp;quot; ]
            then
                # push all files into git repository with commit message
                /usr/local/bin/git add *
                /usr/local/bin/git commit  -m &amp;quot;$2&amp;quot;
                /usr/local/bin/git push
            else
                echo &amp;quot;Huh?&amp;quot;
                exit 1
            fi
    else
        echo &amp;quot;Not pushed to git repo!&amp;quot;
    fi
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;what-does-compile-sh-do:c090ac25567b03c65b47b1965f48ade3&#34;&gt;What does compile.sh do?&lt;/h2&gt;

&lt;p&gt;The compile script just takes all the markdown files and uses pandoc to translate them into LaTex documents. In the next step all LaTeX documents will be concatenated into one &amp;ldquo;big&amp;rdquo; LaTeX file in the given order. Finally the LaTeX file is typesetted and a pdf file is written as output.&lt;/p&gt;

&lt;p&gt;In the case that the user supplies two command line arguments, with the first being &amp;ldquo;push&amp;rdquo; and the second being the commit message, the whole project is commited and pushed into a git repository for version control and backup purposes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Make your own interval training mixtape</title>
      <link>https://bartschat.github.io/post/interval_training_mixtape/</link>
      <pubDate>Thu, 21 Apr 2016 20:24:13 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/interval_training_mixtape/</guid>
      <description>&lt;p&gt;Interval training is nice but how to measure the intervals in a comfortable way? That&amp;rsquo;s been my problem after I decided to pickup heavybag training after a while. I was looking for a nice way to keep track of my round and break times without having to look a watch all the time. I tried to use an interval timer on my iPhone. Nice, but not what I really wanted. After thinking a while about it I had an idea: Why not mix and edit some music so that active work times and break times would be clearly distuingishable? And I wanted a bell. :)
So I needed three things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An audio editing software&lt;/li&gt;
&lt;li&gt;a bell sound&lt;/li&gt;
&lt;li&gt;music&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The third thing was easy, just a short look in my iTunes library and some hours later a I had some songs picked:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/00011.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I created two playlists:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sports&lt;/li&gt;
&lt;li&gt;Sports break&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first list consists of songs with a duration of at least 3:00mins, as I wanted to do 3:00mins rounds on the bag. And they had to be uptempo songs so I chose some metal and hard rock. The second list consists of slower songs for my breaks.&lt;/p&gt;

&lt;p&gt;Now I needed a bell like the ones used in the boxing ring. Via Google I found &lt;a href=&#34;http://www.freesound.org/&#34;&gt;http://www.freesound.org/&lt;/a&gt; and signed on. A fitting sample was quick to be found here: &lt;a href=&#34;http://www.freesound.org/samplesViewSingle.php?id=66951&#34;&gt;http://www.freesound.org/samplesViewSingle.php?id=66951&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s get mixing. :)&lt;/p&gt;

&lt;p&gt;I used Audacity (&lt;a href=&#34;http://audacity.sourceforge.net/&#34;&gt;http://audacity.sourceforge.net/&lt;/a&gt;) for editing under Mac OS X, but Audacity will run under Windows or Linux as well. Starting it up you will encounter the folling screen:
&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00021.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To begin editing I opened my prepared playlist in iTunes, selected my first song and right clicked it &amp;ndash;&amp;gt; Show in Finder&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00041.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now I could drag and drop the file into Audacity where it would be imported. Yeah, my first editable track. To trim the volume to my likings I used the Peak Limiter which can be found in the menu &amp;ldquo;Effects - Apple: AUPeakLimiter&amp;rdquo;. With the slider I could now limit the volume:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00151.png?w=307&amp;amp;h=127&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now I marked the first five seconds of the track with the mouse cursor. Or one can use the text boxes below the track area and just type which time frames are to be selected. I wanted the song to be faded in and via &amp;ldquo;Effects: FadeIn&amp;rdquo; this was accomplished. The timeframes 2:55 to 3:00 were faded out in the same way.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00141.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now the most important part: My bell! :) The wave file from Freesound was dropped into Audacity:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00121.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t quite like the sound of it, so I decided to pitch it down a little bit with the &amp;ldquo;Effects: Tone Pitch&amp;rdquo;. I only went down four semitones:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00171.png?w=248&amp;amp;h=210&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I was nearly down with the first song now. But Audacity projects won&amp;rsquo;t play on any device so I had to export the song via the file menu. First I had to setup the basics, e.g. filename, destination and sound quality. Afterwards I had to put in the metadata:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00181.png?w=373&amp;amp;h=245&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I filled the genre field with the entry &amp;ldquo;Intervall Training&amp;rdquo; to make handling the songs in iTunes more comfortable. After the Audacity export was complete I imported the file into my iTunes library and created a new, smart playlist (not sure whether they are called smart or intelligent playlists in english) with the following criteria:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00191.png?w=482&amp;amp;h=149&#34; /&gt;
(genre is containing Intervall Training)&lt;/p&gt;

&lt;p&gt;The first song was finished now. In the same way I edited the next piece of music I wanted to use for my breaks. The only difference was that I chose 30 seconds as break duration. :) The playlist looked like this:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://allesamende.files.wordpress.com/2011/01/audacityblogpost00051.png?w=500&amp;amp;h=312&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now I could plug in my iPod, sync the playlist and hit the bag. Ok, I did more than two songs. ;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to Lars&#39; hugo powered and github based blog</title>
      <link>https://bartschat.github.io/post/welcome/</link>
      <pubDate>Wed, 20 Apr 2016 19:03:59 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/welcome/</guid>
      <description>&lt;p&gt;nope, nothing&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Statement</title>
      <link>https://bartschat.github.io/post/privacy/</link>
      <pubDate>Wed, 20 Apr 2016 15:27:30 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/privacy/</guid>
      <description>&lt;p&gt;&lt;h2&gt;General&lt;/h2&gt;Your personal data (e.g. title, name, house address, e-mail address, phone number, bank details, credit card number) are processed by us only in accordance with the provisions of German data privacy laws. The following provisions describe the type, scope and purpose of collecting, processing and utilizing personal data. This data privacy policy applies only to our web pages. If links on our pages route you to other pages, please inquire there about how your data are handled in such cases.&lt;br/&gt;&lt;h2&gt;Inventory data&lt;/h2&gt;(1) Your personal data, insofar as these are necessary for this contractual relationship (inventory data) in terms of its establishment, organization of content and modifications, are used exclusively for fulfilling the contract. For goods to be delivered, for instance, your name and address must be relayed to the supplier of the goods. &lt;br/&gt;(2) Without your explicit consent or a legal basis, your personal data are not passed on to third parties outside the scope of fulfilling this contract. After completion of the contract, your data are blocked against further use. After expiry of deadlines as per tax-related and commercial regulations, these data are deleted unless you have expressly consented to their further use.&lt;br/&gt;&lt;h2&gt;Web analysis with Google Analytics&lt;/h2&gt;This website uses Google Analytics, a web analysis service of Google Inc. (Google). Google Analytics uses cookies, i.e. text files stored on your computer to enable analysis of website usage by you. Information generated by the cookie about your use of this website is usually transmitted to a Google server in the United States and stored there. In case of activated IP anonymization on this website, however, your IP address is previously truncated by Google within member states of the European Union or in other states which are party to the agreement on the European Economic Area. Only in exceptional cases is a full IP address transmitted to a Google server in the United States and truncated there. On behalf this website&amp;rsquo;s owner, Google will use this information to evaluate your use of the website, compile reports about website activities, and provide the website&amp;rsquo;s operator with further services related to website and Internet usage. The IP address sent from your browser as part of Google Analytics is not merged with other data by Google. You can prevent storage of cookies by appropriately setting your browser software; in this case, however, please note that you might not be able to fully use all functions offered by this website. In addition, you can prevent data generated by the cookie and relating to your use of the website (including your IP address) from being collected and processed by Google, by downloading and installing a browser plug-in from the following link: &lt;a href=&#34;http://tools.google.com/dlpage/gaoptout?hl=en&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://tools.google.com/dlpage/gaoptout?hl=en&#34;&gt;http://tools.google.com/dlpage/gaoptout?hl=en&lt;/a&gt;&lt;/a&gt;&lt;br/&gt;&lt;h2&gt;Information about cookies&lt;/h2&gt;(1) To optimize our web presence, we use cookies. These are small text files stored in your computer&amp;rsquo;s main memory. These cookies are deleted after you close the browser. Other cookies remain on your computer (long-term cookies) and permit its recognition on your next visit. This allows us to improve your access to our site.&lt;br/&gt;(2) You can prevent storage of cookies by choosing a &amp;quot;disable cookies&amp;quot; option in your browser settings. But this can limit the functionality of our Internet offers as a result.&lt;br/&gt;&lt;h2&gt;Social plug-ins from Facebook&lt;/h2&gt;We use social plug-ins from facebook.com, operated by Facebook Inc., 1601 S. California Ave, Palo Alto, CA 94304, USA. The plug-ins can be recognized by way of the Facebook logo or the supplement &amp;quot;Facebook Social Plug-in&amp;quot;. For example, if you click on the &amp;quot;Like&amp;quot; button or leave a comment, the relevant information is transmitted directly from your browser to Facebook and stored there. Furthermore, Facebook makes your likes public for your Facebook friends. If you are logged into Facebook, it can assign the invocation of our page directly to your Facebook account. Even if you are not logged in or don&amp;rsquo;t have a Facebook account, your browser sends information (e.g. which web pages you have called up, your IP address) which is then stored by Facebook. For details about handling of your personal data by Facebook and your related rights, please refer to the data privacy policy of Facebook: &lt;a href=&#34;http://www.facebook.com/policy.php&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.facebook.com/policy.php&#34;&gt;http://www.facebook.com/policy.php&lt;/a&gt;&lt;/a&gt;. If you do not want Facebook to map data collected about you via our Web sites to your Facebook account, you must log out of Facebook before you visit our web pages.&lt;br/&gt;&lt;h2&gt;Social plug-ins from Twitter&lt;/h2&gt;With Twitter and its Retweet functions, we use social plug-ins from Twitter.com, operated by Twitter Inc. 795 Folsom St., Suite 600, San Francisco, CA 94107. If you use Retweet, the websites visited by you are announced to third parties and associated with your Twitter account. Details about handling of your data by Twitter as well as your rights and setting options for protecting your personal information can be found in Twitter&amp;rsquo;s data privacy policy: &lt;a href=&#34;http://twitter.com/privacy &#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://twitter.com/privacy&#34;&gt;http://twitter.com/privacy&lt;/a&gt; &lt;/a&gt;&lt;br/&gt;&lt;h2&gt;Disclosure&lt;/h2&gt;According to the Federal Data Protection Act, you have a right to free-of-charge information about your stored data, and possibly entitlement to correction, blocking or deletion of such data. Inquiries can be directed to the following e-mail addresses: ( &lt;a href=&#34;mailto:lars@alles-am-en.de&#34;&gt;lars@alles-am-en.de&lt;/a&gt; )&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Quelle: &lt;/i&gt;&lt;a href=&#34;http://www.muster-vorlagen.net/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.muster-vorlagen.net&#34;&gt;http://www.muster-vorlagen.net&lt;/a&gt;&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://bartschat.github.io/post/aboutme/</link>
      <pubDate>Wed, 20 Apr 2016 21:20:25 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/aboutme/</guid>
      <description>&lt;p&gt;Hey there and thanks for reading my blog!&lt;/p&gt;

&lt;p&gt;My name is Lars and I´m currently working for the German Armed Forces and
doing my &lt;a href=&#34;http://weiterbildung.uni-muenster.de/de/masterstudiengaenge/emba-marketing/marketingmba/&#34;&gt;MBA&lt;/a&gt;
at the &lt;a href=&#34;http://www.uni-muenster.de&#34;&gt;University of Münster&lt;/a&gt; in my spare time.&lt;/p&gt;

&lt;p&gt;Hopefully I´ll find a photo that can be put on this &amp;ldquo;about me&amp;rdquo; page soon.&lt;/p&gt;

&lt;p&gt;In the meantime enjoy the sometimes geeky content posted on the blog and if you like leave a comment.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Impressum</title>
      <link>https://bartschat.github.io/post/impressum/</link>
      <pubDate>Wed, 20 Apr 2016 17:25:37 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/impressum/</guid>
      <description>&lt;p&gt;&lt;h1&gt;Legal Disclosure&lt;/h1&gt;Information in accordance with section 5 TMG&lt;br/&gt;&lt;br/&gt;Lars Bartschat&lt;br/&gt;&lt;h2&gt;Contact&lt;/h2&gt;Telephone: on request&lt;br/&gt;E-Mail: &lt;a href=&#34;mailto:lars@alles-am-en.de&#34;&gt;lars@alles-am-en.de&lt;/a&gt;&lt;br/&gt;Internetadresse: &lt;a href=&#34;http://www.https://bartschat.github.io&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://bartschat.github.io&#34;&gt;https://bartschat.github.io&lt;/a&gt;&lt;/a&gt;&lt;br/&gt;&lt;h2&gt;Person responsible for content in accordance with 55 Abs. 2 RStV&lt;/h2&gt;Lars Bartschat&lt;br/&gt;&lt;h2&gt;Disclaimer&lt;/h2&gt;Accountability for content&lt;br/&gt;The contents of our pages have been created with the utmost care. However, we cannot guarantee the contents&amp;rsquo; accuracy, completeness or topicality. According to statutory provisions, we are furthermore responsible for our own content on these web pages. In this context, please note that we are accordingly not obliged to monitor merely the transmitted or saved information of third parties, or investigate circumstances pointing to illegal activity. Our obligations to remove or block the use of information under generally applicable laws remain unaffected by this as per &amp;sect;&amp;sect; 8 to 10 of the Telemedia Act (TMG).&lt;br/&gt;&lt;br/&gt;Accountability for links&lt;br/&gt;Responsibility for the content of external links (to web pages of third parties) lies solely with the operators of the linked pages. No violations were evident to us at the time of linking. Should any legal infringement become known to us, we will remove the respective link immediately.&lt;br/&gt;&lt;br/&gt;Copyright&lt;br/&gt; Our web pages and their contents are subject to German copyright law. Unless expressly permitted by law (&amp;sect; 44a et seq. of the copyright law), every form of utilizing, reproducing or processing works subject to copyright protection on our web pages requires the prior consent of the respective owner of the rights. Individual reproductions of a work are allowed only for private use, so must not serve either directly or indirectly for earnings. Unauthorized utilization of copyrighted works is punishable (&amp;sect; 106 of the copyright law).&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Quelle:  &lt;/i&gt;&lt;a href=&#34;http://www.muster-vorlagen.net&#34; target=&#34;_blank&#34;&gt;www.Muster-Vorlagen.net - Impressum Generator  &lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to: Private Internet Access client in an ecryptfs home dir</title>
      <link>https://bartschat.github.io/post/How_to_install_the_Private_Internet_Access_Client_with_ecrypts_home_directory/</link>
      <pubDate>Sat, 21 Jan 2017 18:56:17 +0100</pubDate>
      
      <guid>https://bartschat.github.io/post/How_to_install_the_Private_Internet_Access_Client_with_ecrypts_home_directory/</guid>
      <description>

&lt;h1 id=&#34;introduction:c5a77346dd4a8d90a398a986146d1e14&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Recently my subscription of the &lt;a href=&#34;http://www.cyberghostvpn.com/&#34;&gt;Cyberghost VPN&lt;/a&gt; service ended and I was on the
lookout for a replacement. After reading a lot of reviews and trying some of
the providers out I chose &lt;a href=&#34;https://www.privateinternetaccess.com/&#34;&gt;Private Internet Access&lt;/a&gt;, because the package they
offered seemed to fit my needs at a fair price point.&lt;/p&gt;

&lt;p&gt;The installation of the Linux client was pretty straightforward:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to: &lt;a href=&#34;https://www.privateinternetaccess.com/installer/download_installer_linux&#34;&gt;https://www.privateinternetaccess.com/installer/download_installer_linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the archive&lt;/li&gt;
&lt;li&gt;unpack it&lt;/li&gt;
&lt;li&gt;run the shell script&lt;/li&gt;
&lt;li&gt;enjoy encrypted surfing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unfortunately I was not able to establish a connection, so I checked out the
customer support pages and saw that PIA is not supporting IPv6 currently. My
provider on the other hand is in the migration process and so my cable connection
is using &lt;a href=&#34;https://en.wikipedia.org/wiki/IPv6_transition_mechanism#Dual-Stack_Lite_.28DS-Lite.29&#34;&gt;Dual Stack Lite&lt;/a&gt;
to save precious IPv4 adresses. I suspected some issues here and send a mail to
PIA&amp;rsquo;s customer support.&lt;/p&gt;

&lt;h1 id=&#34;private-internet-access-customer-support:c5a77346dd4a8d90a398a986146d1e14&#34;&gt;Private Internet Access - Customer Support&lt;/h1&gt;

&lt;p&gt;My experience with the support guy was outstanding. Nine minutes after my email I
got my first response and was then guided systematically through the process
of locating and fixing the problem, my &lt;a href=&#34;https://en.wikipedia.org/wiki/ECryptfs&#34;&gt;ecrypts&lt;/a&gt; encrypted home directory.
The pia manager makes use of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Setuid&#34;&gt;&amp;ldquo;setuid&amp;rdquo;&lt;/a&gt;
mechanisim for privilege escalation (to run as root in order to change network
settings). &amp;ldquo;setuid&amp;rdquo; is not supported by ecryptfs so the VPN connection could
not be established.&lt;/p&gt;

&lt;h1 id=&#34;the-solution-move-the-client-to-another-directory:c5a77346dd4a8d90a398a986146d1e14&#34;&gt;The solution: move the client to another directory&lt;/h1&gt;

&lt;p&gt;The problem was solved easily by moving it onto an unencrypted directory in /opt,
changing the ownership of the files to my userid, an creating a symbolic link, so
pia_manager still thinks it is living in my home dir:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir /opt/pia_manager
sudo chown userid:groupid /opt/pia_manager
sudo mv /home/userid/.pia_manager /opt/pia_manager
ln -s /opt/pia_manager /home/userid/.pia_manager
sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After these few steps the connection was established right away.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to add a RealTimeClock (DS3231) to your Raspberry Pi powered PirateBox</title>
      <link>https://bartschat.github.io/post/piratebox_rtc/</link>
      <pubDate>Thu, 21 Apr 2016 19:03:59 +0200</pubDate>
      
      <guid>https://bartschat.github.io/post/piratebox_rtc/</guid>
      <description>

&lt;h2 id=&#34;history:5f88d115bb0dee76a8169d67dc477ff9&#34;&gt;History&lt;/h2&gt;

&lt;p&gt;2016-02-09 Version 1.0 including rewrite for Arch Linux&lt;/p&gt;

&lt;p&gt;2016-02-08 DRAFT version created (Lars@alles-am-en.de)&lt;/p&gt;

&lt;h2 id=&#34;license-stuff:5f88d115bb0dee76a8169d67dc477ff9&#34;&gt;License stuff&lt;/h2&gt;

&lt;p&gt;This work is licensed under the Creative Commons Attribution-ShareAlike 4.0
International License. To view a copy of this license,
visit &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;http://creativecommons.org/licenses/by-sa/4.0/&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;intro:5f88d115bb0dee76a8169d67dc477ff9&#34;&gt;Intro&lt;/h2&gt;

&lt;p&gt;This tutorial will describe how your Raspberry Pi powered PirateBox can be
extended with a RealTimeClock module. Adding an RTC improves your PirateBox
because the Raspberry Pi does not have any clock on board. So everytime
your Pi reboots you need some method to set an exact time or at least some
reasonable estimate. When your Raspberry Pi is in any way connected to the
Internet this is trivial, just setup NTP (network time protocol) and the Pi
will sync itÂ´s system time to the configured NTP server.
As a PirateBoxÂ´s purpose is to provide &amp;ldquo;anonymous offline sharing and
communication&amp;rdquo; a connection to the internet is usually either not wanted
or not possible. There are some workaraounds that involve the use of
filesÂ´ last modified dates and stuff to set something of an assumption of
the current time, but these are all more or less educated guesses. A cheap
and easy way to deal with this issue is to add a DS3231 RTC to your setup.
You can get these modules for as low as 2 or 3 US$ from China based retailers
or for a little more if you want to order at local retailers.
So, letÂ´s get started and add timekeeping to your PirateBox.&lt;/p&gt;

&lt;h2 id=&#34;step-1-buy-rtc-module:5f88d115bb0dee76a8169d67dc477ff9&#34;&gt;Step 1 - Buy RTC module&lt;/h2&gt;

&lt;p&gt;Acquire a RealTimeClock module with a DS3231 chip at a retailer of your choice.
DS1307 chips are working fine as well, they just are not as precise as the
DS3231 modules.&lt;/p&gt;

&lt;h2 id=&#34;step-2-add-i2c-support:5f88d115bb0dee76a8169d67dc477ff9&#34;&gt;Step 2 - Add I2C support&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Make sure your system is up to date:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        $ sudo pacman -Syu
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install I2C packages:
*
            $ sudo pacman -S i2c-tools&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Activate I2C support in &lt;code&gt;config.txt&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        $ sudo vim /boot/config.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;uncomment the following line&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        device_tree_param=i2c_arm=on
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Load necessary modules on boot:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/modules-load.d/raspberrypi.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;make sure at least the following modules are included:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        snd-bcm2835
        i2c-bcm2835
        i2c-dev
        rtc-ds1307
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;save and power down &lt;code&gt;sudo shutdown -h now&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;step-3-add-rtc-module-onto-gpio-ports:5f88d115bb0dee76a8169d67dc477ff9&#34;&gt;Step 3 - Add RTC module onto GPIO ports&lt;/h2&gt;

&lt;p&gt;This one is really easy, just plug the RTC chip onto the correct GPIO ports.&lt;/p&gt;

&lt;h2 id=&#34;step-4-test-and-set-the-new-hardware-clock-module:5f88d115bb0dee76a8169d67dc477ff9&#34;&gt;Step 4 - Test and set the new hardware clock module&lt;/h2&gt;

&lt;p&gt;After the Pi is back up check out if the RTC is detected:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo echo ds1307 0x68 &amp;gt; /sys/class/i2c-adapter/i2c-1/new_device
$ sudo i2cdetect -y 1

     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
    00:          -- -- -- -- -- -- -- -- -- -- -- -- --
    10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
    20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
    30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
    40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
    50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
    60: -- -- -- -- -- -- -- -- UU -- -- -- -- -- -- --
    70: -- -- -- -- -- -- -- --
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now make sure that your current system time is correct (via NTP or just set
it manually with the &lt;code&gt;date&lt;/code&gt;command).
Write the current system time to the RTC module&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo hwclock -w
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check if the time was stored correctly on your hardware clock:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo hwclock -r
Tue Feb  9 17:17:46 2016  .375681 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-5-add-autostart-script-to-systemd:5f88d115bb0dee76a8169d67dc477ff9&#34;&gt;Step 5 Add autostart script to systemd&lt;/h2&gt;

&lt;p&gt;The final step is now to automatically initialize the hardware clock module
and sync the system time to it. This tutorial assumes that you are using
a systemd based Linux distribution for your Raspberry Pi, e.g. raspbian.
Non-systemd based distribution require a different setup.
* Store a script called &lt;code&gt;PirateClock.sh&lt;/code&gt;in &lt;code&gt;/usr/bin&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ sudo vim /usr/bin/PirateClock.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Enter the following code and save the file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#! /bin/bash
echo ds1307 0x68 &amp;gt; /sys/class/i2c-adapter/i2c-1/new_device
hwclock -s
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Adjust the file permissions on &lt;code&gt;/usr/bin/PirateClock.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo chmod +x /usr/bin/PirateClock.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now we need to create a &amp;ldquo;service&amp;rdquo;-script in the systemd architecture to call our script on every reboot.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /lib/systemd/system/PirateClock.service
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Enter the following code and save the file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Unit]
Description=PirateClock - hwclock initialization and sync
After=multi-user.target


[Service]
Type=idle
ExecStart=/usr/bin/PirateClock.sh


[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Adjust the file permissions on &lt;code&gt;/lib/systemd/system/PirateClock.service&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo chmod 644 /lib/systemd/system/PirateClock.service
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now we need to introduce systemd to the new &amp;ldquo;service&amp;rdquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl daemon-reload
$ sudo systemctl enable PirateClock.service
Created symlink from /etc/systemd/system/multi-user.target.wants/PirateClock.service
to /usr/lib/systemd/system/PirateClock.service.
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;reboot&lt;/code&gt; your PirateBox and check if the script was correctly executed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl status PirateClock.service
[sudo] password for alarm:
* PirateClock.service - PirateClock - hwclock initialization and sync
   Loaded: loaded (/usr/lib/systemd/system/PirateClock.service; enabled; vendor preset: disabled)
   Active: inactive (dead) since Tue 2016-02-09 17:34:32 UTC; 49s ago
  Process: 204 ExecStart=/usr/bin/PirateClock.sh (code=exited, status=0/SUCCESS)
 Main PID: 204 (code=exited, status=0/SUCCESS)


Feb 09 17:22:34 alarmpi systemd[1]: Started PirateClock - hwclock initializ...c.
Hint: Some lines were ellipsized, use -l to show in full.


$ sudo hwclock -r
Tue Feb  9 17:35:57 2016  .465668 seconds
$ date
Tue Feb  9 17:36:01 UTC 2016
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>